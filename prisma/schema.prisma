generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum userRoles {
  user
  admin
}

model User {
  id String @id @default(cuid())

  email         String   @unique
  emailVerified Boolean?
  password      String

  name  String
  image String?

  role userRoles[] @default([user])

  UserInShop UserInShop[]
  shops      Shop[]       @relation("UserInShop")
  myShops    Shop[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum planTypes {
  free
  premium
  ultra
  super
}

model Plan {
  id    String @id @default(cuid())
  price Int

  type          planTypes @unique() @default(free)
  maxCategories Int
  maxProducts   Int
  maxCoupons    Int
  maxUsers      Int

  shop Shop[]
}

model Shop {
  id      String @id @default(cuid())
  users   User[] @relation("UserInShop")
  owner   User   @relation(fields: [ownerId], references: [id])
  ownerId String

  slug        String  @unique
  name        String
  logo        String?
  favicon     String?
  banner      String?
  description String?
  domain      String

  primaryColor   String?
  secondaryColor String?

  plan     Plan      @relation(fields: [planType], references: [type])
  planType planTypes

  categorys Categories[]

  expiredAt  DateTime
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  UserInShop UserInShop[]
}

model UserInShop {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  shop      Shop     @relation(fields: [shopId], references: [id])
  shopId    String
  role      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Categories {
  id String @id @default(cuid())

  shop     Shop   @relation(fields: [shopSlug], references: [slug])
  shopSlug String
  name     String

  products Products[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Products {
  id         String @id @default(cuid())
  categoryId String

  name  String
  image String[]
  price Int

  category Categories @relation(fields: [categoryId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
